---

name: CI
on:
  release:
    type:
      - created
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  repository_dispatch:
    types:
      - bml_update
  schedule:
    # Weekly on Sundays:
    - cron: '00 04 * * 0'

  workflow_dispatch:

env:
  TEST_SETTINGS:
  CC: gcc-10
  FC: gfortran-10
  CXX: g++-10
  CMAKE_BUILD_TYPE: Debug
  PKG_CONFIG_PATH: ~/bml/install/lib/pkgconfig:~/bml/install/lib64/pkgconfig
  PROGRESS_EXAMPLES: yes
  PROGRESS_OPENMP: yes
  PROGRESS_TESTING: yes
  VERBOSE_MAKEFILE: yes

jobs:
  lint:
    name: Lint sources
    runs-on: ubuntu-18.04
    steps:
      - name: Check out sources
        uses: actions/checkout@v1
      - name: Prepare container
        run: ./scripts/prepare-container.sh
      - run: bundle install
      - run: bundle exec danger || true
      - run: BML_OPENMP=no EMACS=emacs27 ./build.sh check_indent

  build:
    name: Build and test (${{ matrix.JOBNAME }})
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - JOBNAME: with graphlib, debug
            TEST_SETTINGS: ./scripts/ci-with-graphlib-debug.sh
          - JOBNAME: without graphlib, debug
            PROGRESS_GRAPHLIB: yes
            OMP_NUM_THREADS: 4
            COMMAND: testing
          - JOBNAME: graphlib, release
            PROGRESS_GRAPHLIB: no
            OMP_NUM_THREADS: 4
            CMAKE_BUILD_TYPE: Release
            COMMAND: testing
          - JOBNAME: without graphlib, release
            PROGRESS_GRAPHLIB: yes
            OMP_NUM_THREADS: 4
            CMAKE_BUILD_TYPE: Release
            COMMAND: testing
    steps:
      - name: Check out sources
        uses: actions/checkout@v1
      - run: ./scripts/prepare-container.sh
      - name: Install bml master
        env:
          CC: ${{ matrix.CC || env.CC }}
          FC: ${{ matrix.FC || env.FC }}
          CXX: ${{ matrix.CXX || env.CXX }}
          CMAKE_BUILD_TYPE: ${{ matrix.CMAKE_BUILD_TYPE || env.CMAKE_BUILD_TYPE }}
          TEST_SETTINGS: ${{ matrix.TEST_SETTINGS || env.TEST_SETTINGS }}
        run: ./scripts/install-bml.sh
      - name: Build and test library
        env:
          CC: ${{ matrix.CC || env.CC }}
          FC: ${{ matrix.FC || env.FC }}
          CXX: ${{ matrix.CXX || env.CXX }}
          PROGRESS_GRAPHLIB: ${{ matrix.PROGRESS_GRAPHLIB || env.PROGRESS_GRAPHLIB }}
          OMP_NUM_THREADS: ${{ matrix.OMP_NUM_THREADS || env.OMP_NUM_THREADS }}
          CMAKE_BUILD_TYPE: ${{ matrix.CMAKE_BUILD_TYPE || env.CMAKE_BUILD_TYPE }}
          COMMAND: ${{ matrix.COMMAND || env.COMMAND }}
          TEST_SETTINGS: ${{ matrix.TEST_SETTINGS || env.TEST_SETTINGS }}
        run: |
          [[ -f ${TEST_SETTINGS} ]] && source ${TEST_SETTINGS}
          ./build.sh ${COMMAND}
      - name: Run gpmd example
        run: |
          pushd examples/gpmd
          ./run_test.sh
          popd
      - name: Run gpmdcov example
        run: |
          pushd examples/gpmdcov
          OMP_NUM_THREADS=2 ./run.sh 2
          popd
      - name: Archive example output
        uses: actions/upload-artifact@v2
        with:
          name: example output ${{ matrix.JOBNAME }}
          path: |
            examples/gpmdcov/out
